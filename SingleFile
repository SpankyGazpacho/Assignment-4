# main
# all arguments present?
# if no path specified, use C:\prgm1000
# check if any arguments
from datetime import datetime
import sys, os, platform, getpass


def checkfileexist(file):
    if os.path.exists(file):
        if os.path.isfile(file):
            code = 1
            # path ends with a valid filename

        elif os.path.isdir(file):
            code = 2
            #path ends with a folder

        else:
            # I have no idea what you just put in
            code = 3

    else:
        # Path does not exist
        code = 4

    return (code)


# read(sourcepath)
# check if file exists
# error message if source path does not exist
# output plain text

def read(inputpath):

    placeholder = open(inputpath, "r")
    inputfile = placeholder.read()
    return (inputfile)


# alter(plain text)
# add header
# read OS type
# read logged-in user
# read date and time
# output edited plain text

def alter(inputtext):

    os = str(platform.system())
    uname = str(getpass.getuser())
    daytime = str(datetime.now())

    header = os + '\n' + uname + '\n' + daytime + '\n'

    spltext = inputtext.split('\n')

    proctext = ''

    for i in range(len(spltext)):
        proctext += (str(datetime.now().time()) + ' ' + spltext[i] + '\n')

    finaltext = header + proctext
    return finaltext
    # this print can be removed once testing is done


def write(destpath, text, destcode):
    if destcode == 1:
        okflag = input("The output file already exists! Would you like to overwrite it? Y/N: ").upper()
        if okflag == "Y":
            try:
                placeholder = open(destpath, "w")
                placeholder.write(text)
                placeholder.close()
                # exit the program
            except:
                print("An unexpected error has occurred. Please contact your local programmer.")
        elif okflag == "N":
            print("Goodbye!")
            # exit the program
        else:
            print("That's not what I asked for! Goodbye!")
            # exit the program

    elif destcode == 4:
        # check if the path minus the last element is a valid directory
        splitinp = destpath.split("\\")
        if splitinp[-1] == '':
            splitinp.remove('')

        reass = ''
        for i in range(len(splitinp) - 1):
            reass += splitinp[i]
            reass += '\\'

        if os.path.isdir(reass):
            #If path is valid
            placeholder = open(destpath, "w")
            placeholder.write(text)
            placeholder.close()
        else:
#           If path is invalid
            print("The destination path is invalid!")

# if: error message if dest path does not exist, if not, do they want to create path? if not, terminate program
#   else continue
# if: error message if file already exists at dest path. Do they want to overwrite? or new file? whats the name of the file?
# try to write to file, if misc error, generic error message

numofargs = len(sys.argv)

if numofargs == 3:
    #run normally
    splitoutput = sys.argv[2].split("\\")

    if len(splitoutput) == 1:
        destpath = "C:\\Test\\" + str(sys.argv[2])
    else:
        destpath = sys.argv[2]

    sourcepath = sys.argv[1]

    sourcecode = checkfileexist(sourcepath)
    destcode = checkfileexist(destpath)
    if (sourcecode == 1) & ((destcode == 1) | (destcode == 4)):
        inptext = read(sourcepath)
        ouptext = alter(inptext)
        write(destpath,ouptext,destcode)
    else:
        #error codes based sourcecode and destcode
        if destcode == 2:
            print("The destination path is folder, not a filename!")
        if destcode == 3:
            print("THIS IS YOUR FAULT: An unexpected error has occurred with the destination path")
        if sourcecode == 2:
            print("The source path is a folder not a file!")
        if sourcecode == 3:
            print("THIS IS YOUR FAULT: An unexpected error has occurred with the source path!")
        if sourcecode == 4:
            print("The source path does not exist!")
else:
    #error based on number of arguments
    if (numofargs == 1) | (numofargs == 2):
        print("You need to specify input and output paths!")
    if numofargs > 3:
        print("You put too many arguments!")
